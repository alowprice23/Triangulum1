# Standardized prompts for benchmarking LLM providers in Triangulum LX

- task: "observer_summarize_error"
  prompt: |
    The following error occurred during a test run. Please provide a concise, 
    one-paragraph summary of the root cause.
    
    ```
    Traceback (most recent call last):
      File "/app/src/main.py", line 52, in process_invoice
        return self.calculator.calculate_tax(invoice.total)
      File "/app/src/calculator.py", line 15, in calculate_tax
        tax_rate = self.get_tax_rate(invoice.region)
    AttributeError: 'Invoice' object has no attribute 'region'
    ```

- task: "analyst_generate_patch"
  prompt: |
    Based on the following summary, generate a git diff to fix the bug.
    The error is an `AttributeError` because the `Invoice` object lacks a `region` attribute.
    The `get_tax_rate` function in `calculator.py` expects it. The `process_invoice`
    function in `main.py` should probably pass the customer's region to the calculator.

- task: "verifier_check_logic"
  prompt: |
    A patch was applied to fix an `AttributeError`. Does the following code now correctly
    pass the customer's region to the tax calculator?
    
    ```python
    # In main.py
    def process_invoice(self, invoice_id: str, customer_id: str):
        invoice = self.db.get_invoice(invoice_id)
        customer = self.db.get_customer(customer_id)
        # FIX: Pass customer.region instead of invoice.region
        return self.calculator.calculate_tax(invoice.total, customer.region)
