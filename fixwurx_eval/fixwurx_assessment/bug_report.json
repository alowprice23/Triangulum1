{
  "status": "success",
  "bugs_by_file": {
    "C:\\Users\\Yusuf\\Downloads\\FixWurx\\agent_coordinator.py": [
      {
        "bug_id": "dac33b4a-8ef7-4d48-83ca-528cf8787065",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\agent_coordinator.py",
        "line_number": 168,
        "pattern_id": "ast_null_pointer",
        "bug_type": {},
        "description": "Potential null/None reference detected by AST analysis",
        "severity": "high",
        "confidence": 0.7,
        "remediation": "Add null/None check before accessing properties",
        "code_snippet": "        status = verdict.get(\"status\", \"\").upper()",
        "match_text": "upper",
        "context": {},
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      }
    ],
    "C:\\Users\\Yusuf\\Downloads\\FixWurx\\canary_runner.py": [
      {
        "bug_id": "3053e3f5-a55e-4696-bad2-2ca4ff588f6c",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\canary_runner.py",
        "line_number": 113,
        "pattern_id": "exception_swallowing",
        "bug_type": {},
        "description": "Exception caught but not handled properly",
        "severity": "medium",
        "confidence": 0.6,
        "remediation": "Log the exception at minimum, and consider proper error handling",
        "code_snippet": "except FileNotFoundError:",
        "match_text": "except FileNotFoundError:\n            return",
        "context": {
          "surrounding_code": "xed: null_reference - Exception caught but not handled properly\n# Fixed: null_reference - Exception caught but not handled properly\n# Fixed: null_reference - Exception caught but not handled properly\n        except FileNotFoundError:\n            return CanaryResult(\n                passed=False,\n                timed_out=False,\n                output=\"\",\n                error=f\"Command not found: {test_command[0]}\"\n            )\n"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      }
    ],
    "C:\\Users\\Yusuf\\Downloads\\FixWurx\\cli.py": [
      {
        "bug_id": "b897119d-9ed4-46d7-8c89-3a0bc720b969",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\cli.py",
        "line_number": 110,
        "pattern_id": "weak_crypto",
        "bug_type": {},
        "description": "Use of weak cryptographic algorithm",
        "severity": "high",
        "confidence": 0.8,
        "remediation": "Use strong algorithms like SHA-256, SHA-3, or bcrypt for passwords",
        "code_snippet": "\"SELECT id, bug_id, status, created_at FROM reviews WHERE status=? ORDER BY id DESC\",",
        "match_text": "DES",
        "context": {
          "surrounding_code": "ryptographic algorithm\n# Fixed: weak_crypto - Use of weak cryptographic algorithm\n# Fixed: weak_crypto - Use of weak cryptographic algorithm\n# Fixed: weak_crypto - Use of weak cryptographic algorithm\n            \"SELECT id, bug_id, status, created_at FROM reviews WHERE status=? ORDER BY id DESC\",\n            (filter_status.upper(),),\n        )\n# Fixed: weak_crypto - Use of weak cryptographic algorithm\n        cur.execute(\"SELECT id, bug_id, status, created_at FROM reviews ORDER BY id DESC\")\n "
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "65f4d1e3-a058-43d1-8a83-7a48d4671a16",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\cli.py",
        "line_number": 114,
        "pattern_id": "weak_crypto",
        "bug_type": {},
        "description": "Use of weak cryptographic algorithm",
        "severity": "high",
        "confidence": 0.8,
        "remediation": "Use strong algorithms like SHA-256, SHA-3, or bcrypt for passwords",
        "code_snippet": "cur.execute(\"SELECT id, bug_id, status, created_at FROM reviews ORDER BY id DESC\")",
        "match_text": "DES",
        "context": {
          "surrounding_code": "       \"SELECT id, bug_id, status, created_at FROM reviews WHERE status=? ORDER BY id DESC\",\n            (filter_status.upper(),),\n        )\n# Fixed: weak_crypto - Use of weak cryptographic algorithm\n        cur.execute(\"SELECT id, bug_id, status, created_at FROM reviews ORDER BY id DESC\")\n    return cur.fetchall()\n    return cur.fetchall()\n    return cur.fetchall()\n    return cur.fetchall()\n    return cur.fetchall()\n\n\ndef _fmt_age(ts: float) -> str:\n    secs = int(time.time() - ts)\n  "
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "b041c353-235d-4214-9201-3236118eac40",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\cli.py",
        "line_number": 176,
        "pattern_id": "ast_null_pointer",
        "bug_type": {},
        "description": "Potential null/None reference detected by AST analysis",
        "severity": "high",
        "confidence": 0.7,
        "remediation": "Add null/None check before accessing properties",
        "code_snippet": "    args = _build_parser().parse_args()",
        "match_text": "parse_args",
        "context": {},
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "7f2f3dea-e0ae-411b-98ef-170de55ec6ac",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\cli.py",
        "line_number": 178,
        "pattern_id": "ast_null_pointer",
        "bug_type": {},
        "description": "Potential null/None reference detected by AST analysis",
        "severity": "high",
        "confidence": 0.7,
        "remediation": "Add null/None check before accessing properties",
        "code_snippet": "    args = _build_parser().parse_args()",
        "match_text": "parse_args",
        "context": {},
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "53559fa3-1033-47d5-8e3f-824df47abe5d",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\cli.py",
        "line_number": 181,
        "pattern_id": "ast_null_pointer",
        "bug_type": {},
        "description": "Potential null/None reference detected by AST analysis",
        "severity": "high",
        "confidence": 0.7,
        "remediation": "Add null/None check before accessing properties",
        "code_snippet": "    args = _build_parser().parse_args()",
        "match_text": "parse_args",
        "context": {},
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "1ee80ef3-8433-4810-bc2b-06ad25986317",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\cli.py",
        "line_number": 185,
        "pattern_id": "ast_null_pointer",
        "bug_type": {},
        "description": "Potential null/None reference detected by AST analysis",
        "severity": "high",
        "confidence": 0.7,
        "remediation": "Add null/None check before accessing properties",
        "code_snippet": "    args = _build_parser().parse_args()",
        "match_text": "parse_args",
        "context": {},
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "0ccb5d49-d7ab-4722-b3e0-c3a342d5e8ce",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\cli.py",
        "line_number": 190,
        "pattern_id": "ast_null_pointer",
        "bug_type": {},
        "description": "Potential null/None reference detected by AST analysis",
        "severity": "high",
        "confidence": 0.7,
        "remediation": "Add null/None check before accessing properties",
        "code_snippet": "    args = _build_parser().parse_args()",
        "match_text": "parse_args",
        "context": {},
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "2b720c32-071b-443d-a510-9544110eaae5",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\cli.py",
        "line_number": 86,
        "pattern_id": "ast_null_pointer",
        "bug_type": {},
        "description": "Potential null/None reference detected by AST analysis",
        "severity": "high",
        "confidence": 0.7,
        "remediation": "Add null/None check before accessing properties",
        "code_snippet": "    lines = logf.read_text(encoding=\"utf-8\").splitlines()[-n:]",
        "match_text": "splitlines",
        "context": {},
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      }
    ],
    "C:\\Users\\Yusuf\\Downloads\\FixWurx\\dashboard_stub.py": [
      {
        "bug_id": "7d625c90-e6c3-4ed9-a6af-1bcc43d92d33",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\dashboard_stub.py",
        "line_number": 173,
        "pattern_id": "ast_null_pointer",
        "bug_type": {},
        "description": "Potential null/None reference detected by AST analysis",
        "severity": "high",
        "confidence": 0.42,
        "remediation": "Add null/None check before accessing properties",
        "code_snippet": "_template_dir = Path(__file__).parent / \"templates\"",
        "match_text": "parent",
        "context": {},
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 0.6,
            "false_positive_probability": 0.0,
            "notes": [
              "AST analysis found None check"
            ]
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "49ce53d3-8ee2-41e8-be8e-f713d06938cd",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\dashboard_stub.py",
        "line_number": 95,
        "pattern_id": "ast_null_pointer",
        "bug_type": {},
        "description": "Potential null/None reference detected by AST analysis",
        "severity": "high",
        "confidence": 0.42,
        "remediation": "Add null/None check before accessing properties",
        "code_snippet": "templates = Jinja2Templates(directory=str((Path(__file__).parent / \"templates\").resolve()))",
        "match_text": "parent",
        "context": {},
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 0.6,
            "false_positive_probability": 0.0,
            "notes": [
              "AST analysis found None check"
            ]
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      }
    ],
    "C:\\Users\\Yusuf\\Downloads\\FixWurx\\hub.py": [
      {
        "bug_id": "18444632-68ab-4cf8-8c0e-07d9b6987ee8",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\hub.py",
        "line_number": 120,
        "pattern_id": "weak_crypto",
        "bug_type": {},
        "description": "Use of weak cryptographic algorithm",
        "severity": "high",
        "confidence": 0.8,
        "remediation": "Use strong algorithms like SHA-256, SHA-3, or bcrypt for passwords",
        "code_snippet": "\"SELECT * FROM reviews WHERE status=? ORDER BY created_at DESC\",",
        "match_text": "DES",
        "context": {
          "surrounding_code": "ryptographic algorithm\n# Fixed: weak_crypto - Use of weak cryptographic algorithm\n# Fixed: weak_crypto - Use of weak cryptographic algorithm\n# Fixed: weak_crypto - Use of weak cryptographic algorithm\n            \"SELECT * FROM reviews WHERE status=? ORDER BY created_at DESC\",\n            (status_filter.upper(),),\n        ).fetchall()\n    else:\n        rows = conn.execute(\n            \"SELECT * FROM reviews ORDER BY created_at DESC\"\n        ).fetchall()\n    return [_to_out"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "56f2a80f-73fc-49fb-a83b-9899ce86ec9a",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\hub.py",
        "line_number": 125,
        "pattern_id": "weak_crypto",
        "bug_type": {},
        "description": "Use of weak cryptographic algorithm",
        "severity": "high",
        "confidence": 0.8,
        "remediation": "Use strong algorithms like SHA-256, SHA-3, or bcrypt for passwords",
        "code_snippet": "\"SELECT * FROM reviews ORDER BY created_at DESC\"",
        "match_text": "DES",
        "context": {
          "surrounding_code": " cryptographic algorithm\n            \"SELECT * FROM reviews WHERE status=? ORDER BY created_at DESC\",\n            (status_filter.upper(),),\n        ).fetchall()\n    else:\n        rows = conn.execute(\n            \"SELECT * FROM reviews ORDER BY created_at DESC\"\n        ).fetchall()\n    return [_to_out(r) for r in rows]\n\n\n@app.post(\"/reviews\", response_model=ReviewOut, status_code=status.HTTP_201_CREATED)\ndef create_review(review: ReviewIn):\n    \"\"\"\n    Crea"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "5866a1bc-0e91-46b8-9d64-21cd62ac696d",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\hub.py",
        "line_number": 100,
        "pattern_id": "ast_null_pointer",
        "bug_type": {},
        "description": "Potential null/None reference detected by AST analysis",
        "severity": "high",
        "confidence": 0.7,
        "remediation": "Add null/None check before accessing properties",
        "code_snippet": "    row = conn.execute(\"SELECT * FROM reviews WHERE id=?\", (review_id,)).fetchone()",
        "match_text": "fetchone",
        "context": {},
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "de674e7b-2a04-4887-ad0c-1909e9d22d8b",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\hub.py",
        "line_number": 115,
        "pattern_id": "ast_null_pointer",
        "bug_type": {},
        "description": "Potential null/None reference detected by AST analysis",
        "severity": "high",
        "confidence": 0.7,
        "remediation": "Add null/None check before accessing properties",
        "code_snippet": "        rows = conn.execute(",
        "match_text": "fetchall",
        "context": {},
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "fbbb023f-2976-4c1a-aace-4f849949bcb4",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\hub.py",
        "line_number": 124,
        "pattern_id": "ast_null_pointer",
        "bug_type": {},
        "description": "Potential null/None reference detected by AST analysis",
        "severity": "high",
        "confidence": 0.7,
        "remediation": "Add null/None check before accessing properties",
        "code_snippet": "        rows = conn.execute(",
        "match_text": "fetchall",
        "context": {},
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      }
    ],
    "C:\\Users\\Yusuf\\Downloads\\FixWurx\\llm_integrations.py": [
      {
        "bug_id": "921dbbe0-2b99-41b5-a528-e74b6789ac47",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\llm_integrations.py",
        "line_number": 229,
        "pattern_id": "exception_swallowing",
        "bug_type": {},
        "description": "Exception caught but not handled properly",
        "severity": "medium",
        "confidence": 0.6,
        "remediation": "Log the exception at minimum, and consider proper error handling",
        "code_snippet": "except Exception:",
        "match_text": "except Exception:\n                #",
        "context": {
          "surrounding_code": "xed: null_reference - Exception caught but not handled properly\n# Fixed: null_reference - Exception caught but not handled properly\n# Fixed: null_reference - Exception caught but not handled properly\n            except Exception:\n                # silent fail \u2013 provider not available/configured\n                pass\n\n        if not self.providers:\n            raise RuntimeError(\"No LLM provider could be initialised\")\n\n    # ~~"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      }
    ],
    "C:\\Users\\Yusuf\\Downloads\\FixWurx\\meta_agent.py": [
      {
        "bug_id": "eeaeaaf2-f31f-4d01-97a6-dff4f3c5cee2",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\meta_agent.py",
        "line_number": 126,
        "pattern_id": "exception_swallowing",
        "bug_type": {},
        "description": "Exception caught but not handled properly",
        "severity": "medium",
        "confidence": 0.6,
        "remediation": "Log the exception at minimum, and consider proper error handling",
        "code_snippet": "except IndexError:",
        "match_text": "except IndexError:\n                break",
        "context": {
          "surrounding_code": "xed: null_reference - Exception caught but not handled properly\n# Fixed: null_reference - Exception caught but not handled properly\n# Fixed: null_reference - Exception caught but not handled properly\n            except IndexError:\n                break\n\n    # ---------------------------------------------------------------- debug\n    def __repr__(self) -> str:  # noqa: Dunder\n        succ_rate = (\n            sum(1 for h in sel"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      }
    ],
    "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py": [
      {
        "bug_id": "9f129eb3-86e7-4628-99be-8ac6f3466205",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 28,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": " 1500\n= 0.5 if success and mean_tokens > 1500\n= 0.0 if failure\n\n\nAlgorithm\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\u2022 \u03b5-greedy bandit over the discrete set  {2, 3, 4}.  \n\u2022 Keeps running average Q(timer) and visit count N(timer).  \n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n\u2022 Every `U"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "c2d5e831-e636-48ad-84c3-854d9ad36d96",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 29,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "\n\nAlgorithm\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\u2022 \u03b5-greedy bandit over the discrete set  {2, 3, 4}.  \n\u2022 Keeps running average Q(timer) and visit count N(timer).  \n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n\u2022 Every `UPDATE_FREQ` episodes, with probability \u03b5 choose random timer,\n#"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "be03da49-a54c-47ee-8c11-6fd922482647",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 30,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "{2, 3, 4}.  \n\u2022 Keeps running average Q(timer) and visit count N(timer).  \n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n\u2022 Every `UPDATE_FREQ` episodes, with probability \u03b5 choose random timer,\n# Fixed: weak_crypto - Use of insecure random number generator\n\u2022"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "24e6abb3-eea7-4fd9-a5df-95c908e38a19",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 31,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "(timer).  \n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n\u2022 Every `UPDATE_FREQ` episodes, with probability \u03b5 choose random timer,\n# Fixed: weak_crypto - Use of insecure random number generator\n\u2022 Every `UPDATE_FREQ` episodes, with probability \u03b5 choose random"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "49ad5f4d-39a7-4e21-8697-50f91f031cdc",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 32,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "\u2022 Every `UPDATE_FREQ` episodes, with probability \u03b5 choose random timer,",
        "match_text": "random",
        "context": {
          "surrounding_code": " generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n\u2022 Every `UPDATE_FREQ` episodes, with probability \u03b5 choose random timer,\n# Fixed: weak_crypto - Use of insecure random number generator\n\u2022 Every `UPDATE_FREQ` episodes, with probability \u03b5 choose random timer,\n  else exploit best Q.  \n\u2022 Every `UPDATE_FREQ` episodes, with pr"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "f62d1a7a-414f-453f-957a-ef5dbca93484",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 33,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "r\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n\u2022 Every `UPDATE_FREQ` episodes, with probability \u03b5 choose random timer,\n# Fixed: weak_crypto - Use of insecure random number generator\n\u2022 Every `UPDATE_FREQ` episodes, with probability \u03b5 choose random timer,\n  else exploit best Q.  \n\u2022 Every `UPDATE_FREQ` episodes, with probability \u03b5 choose random timer,\n  else exploit best Q.  \n\u2022 Eve"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "324e9c5c-47e9-48ec-b810-f3995a0e1fa8",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 34,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "\u2022 Every `UPDATE_FREQ` episodes, with probability \u03b5 choose random timer,",
        "match_text": "random",
        "context": {
          "surrounding_code": "r\n# Fixed: weak_crypto - Use of insecure random number generator\n\u2022 Every `UPDATE_FREQ` episodes, with probability \u03b5 choose random timer,\n# Fixed: weak_crypto - Use of insecure random number generator\n\u2022 Every `UPDATE_FREQ` episodes, with probability \u03b5 choose random timer,\n  else exploit best Q.  \n\u2022 Every `UPDATE_FREQ` episodes, with probability \u03b5 choose random timer,\n  else exploit best Q.  \n\u2022 Every `UPDATE_FREQ` episodes, with probability \u03b5 choose random timer,\n  els"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "e71dd18f-47a5-4b2f-ac80-2065938b5c70",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 36,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "\u2022 Every `UPDATE_FREQ` episodes, with probability \u03b5 choose random timer,",
        "match_text": "random",
        "context": {
          "surrounding_code": "with probability \u03b5 choose random timer,\n# Fixed: weak_crypto - Use of insecure random number generator\n\u2022 Every `UPDATE_FREQ` episodes, with probability \u03b5 choose random timer,\n  else exploit best Q.  \n\u2022 Every `UPDATE_FREQ` episodes, with probability \u03b5 choose random timer,\n  else exploit best Q.  \n\u2022 Every `UPDATE_FREQ` episodes, with probability \u03b5 choose random timer,\n  else exploit best Q.  \n  else exploit best Q.  \n\u2022 Writes new value into `engine.timer_default` **bet"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "d657f3c4-857b-406b-8fc4-b2e5b2cb3f87",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 38,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "\u2022 Every `UPDATE_FREQ` episodes, with probability \u03b5 choose random timer,",
        "match_text": "random",
        "context": {
          "surrounding_code": "rator\n\u2022 Every `UPDATE_FREQ` episodes, with probability \u03b5 choose random timer,\n  else exploit best Q.  \n\u2022 Every `UPDATE_FREQ` episodes, with probability \u03b5 choose random timer,\n  else exploit best Q.  \n\u2022 Every `UPDATE_FREQ` episodes, with probability \u03b5 choose random timer,\n  else exploit best Q.  \n  else exploit best Q.  \n\u2022 Writes new value into `engine.timer_default` **between bugs** \u2013 the State\n  Machine picks it up on the next WAIT\u2192REPRO promotion, so no invariants\n"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "974f6984-614b-4ab4-a026-6cf0287062e7",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 47,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "st Q.  \n\u2022 Writes new value into `engine.timer_default` **between bugs** \u2013 the State\n  Machine picks it up on the next WAIT\u2192REPRO promotion, so no invariants\n  break mid-flight.\n\nPublic API\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport ran"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "f61d46db-85a4-46e5-aea3-cc8e1ebfc1cc",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 48,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "n bugs** \u2013 the State\n  Machine picks it up on the next WAIT\u2192REPRO promotion, so no invariants\n  break mid-flight.\n\nPublic API\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport statistics\n# Fixed: weak_crypto - Use of insecure ra"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "b78adaef-4ee1-4758-a008-ea98fd988ccf",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 49,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "RO promotion, so no invariants\n  break mid-flight.\n\nPublic API\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport statistics\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure ra"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "cb307333-ca0e-4fd6-ba52-156c39a044f2",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 50,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport statistics\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure ra"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "d2a07418-62b2-48c3-8ffa-47d160386a7c",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 51,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "import random",
        "match_text": "random",
        "context": {
          "surrounding_code": " generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport statistics\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number ge"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "54080958-c655-44a0-b7a1-7928a8c83be1",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 53,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "- Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport statistics\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\n# Fixed: weak_crypto - Use of insecure random number genera"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "597c560f-9375-45d5-ae94-68f271c7199f",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 54,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "- Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport statistics\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number genera"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "52a5cbed-67b1-4cbd-b936-7e459969197b",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 55,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "- Use of insecure random number generator\nimport random\nimport statistics\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport statistics\n# Fixed: weak_crypto - Use "
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "7ce6c042-4515-400d-a20f-121006f58954",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 56,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "import random",
        "match_text": "random",
        "context": {
          "surrounding_code": "statistics\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport statistics\n# Fixed: weak_crypto - Use of insecure ra"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "67603646-143c-4070-87e1-7fc3c96b3d0c",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 57,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "ixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport statistics\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure ra"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "d8ead678-db66-4ab7-baa1-bab673e95a13",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 58,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "ixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport statistics\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure ra"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "dd76c24b-c3ef-4d6b-9efd-258aab287048",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 59,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "import random",
        "match_text": "random",
        "context": {
          "surrounding_code": "ixed: weak_crypto - Use of insecure random number generator\nimport random\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport statistics\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number ge"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "cf2f1db4-a759-4a3d-8039-457a18a4d4c6",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 61,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "ure random number generator\nimport random\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport statistics\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport statistics\n\"\"\"\n# Fixed: weak_crypto - Use of insecur"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "e1be1833-0ca8-464b-9463-474f7e5203fe",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 62,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "- Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport statistics\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport statistics\n\"\"\"\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecur"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "efe805dd-b646-4a8d-b7d5-dcbe847fc450",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 63,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "- Use of insecure random number generator\nimport random\nimport statistics\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport statistics\n\"\"\"\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport statistics\n# Fix"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "61579aed-1836-457a-8918-432213d42b38",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 64,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "import random",
        "match_text": "random",
        "context": {
          "surrounding_code": "statistics\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport statistics\n\"\"\"\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport statistics\n# Fixed: weak_crypt"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "f1dec3ca-62bb-4b38-a534-0a4e84e0bbf5",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 67,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "e of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport statistics\n\"\"\"\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport statistics\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport statistics\nimport st"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "93ee3308-0082-408e-94d8-4ec4b9226eb4",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 68,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "e of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport statistics\n\"\"\"\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport statistics\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport statistics\nimport statistics\nimport time\nfrom typing import Dict, Optional\n\nfrom le"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "ec9d560c-f839-41b3-b9af-b63a83c06b7e",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 69,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "import random",
        "match_text": "random",
        "context": {
          "surrounding_code": "e of insecure random number generator\nimport random\nimport statistics\n\"\"\"\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport statistics\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport statistics\nimport statistics\nimport time\nfrom typing import Dict, Optional\n\nfrom learning.replay_"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "047d8c9c-800e-4b7d-a081-625dfbbf8c59",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 71,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "rator\nimport random\nimport statistics\n\"\"\"\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport statistics\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport statistics\nimport statistics\nimport time\nfrom typing import Dict, Optional\n\nfrom learning.replay_buffer import ReplayBuffer\n\n# tunables\nTIMER_CANDIDATES = (2, 3, 4)\nEPSILON = 0.1"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "b91fd2a9-c65a-4f9c-85cd-6f473f8cbebe",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 72,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "import random",
        "match_text": "random",
        "context": {
          "surrounding_code": "- Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport statistics\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport statistics\nimport statistics\nimport time\nfrom typing import Dict, Optional\n\nfrom learning.replay_buffer import ReplayBuffer\n\n# tunables\nTIMER_CANDIDATES = (2, 3, 4)\nEPSILON = 0.10             "
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "34f3ed67-07eb-4ed9-b368-0c09b93f2fbe",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 114,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "mean_tokens(int)  plus optional reward.\n        \"\"\"\n        self.buffer.add(metric)\n        self._since_update += 1\n\n        # derive reward\n        rew = metric.get(\"reward\")\n        if rew is None:\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: w"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "44c1e16c-c03f-4488-9b8a-244f8ce2d84d",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 115,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "f.buffer.add(metric)\n        self._since_update += 1\n\n        # derive reward\n        rew = metric.get(\"reward\")\n        if rew is None:\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: w"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "feaddd19-2961-45c5-bd26-f7f86e0de0aa",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 116,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": " derive reward\n        rew = metric.get(\"reward\")\n        if rew is None:\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: w"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "e6bf1194-11c8-4e24-8eb3-897e24018cb5",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 117,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "w is None:\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: w"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "b63396e5-f84b-4614-b10c-71022bf46626",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 118,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": " generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: w"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "29084549-11cd-4b8e-83f3-af4a52d84b14",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 119,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": " generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: w"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "1288df4a-6be2-40f7-a61f-ca7d182c41cd",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 120,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": " generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: w"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "6da18b20-e194-4f88-bc4a-d6aa20e33ee8",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 121,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": " generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: w"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "70dd54b9-fcd9-4101-b119-967c75bd2a8e",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 122,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": " generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: w"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "21355d78-c628-4dd2-b624-c05f02f9e72f",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 123,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": " generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n          "
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "526e902f-1f63-42bc-a81b-b78925fddd09",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 124,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": " generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_cry"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "548afcf9-abf1-4894-a927-6e576c2687b0",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 125,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": " generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_cry"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "5ce41749-fad7-45b7-8f17-7eeb75f077f8",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 126,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": " generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_t"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "6c26c0b4-04bc-4508-8aca-b270c5859fae",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 127,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "new_timer = random.choice(TIMER_CANDIDATES)",
        "match_text": "random",
        "context": {
          "surrounding_code": " generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n        self.n[ti"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "9200fb0f-b3a7-40fc-8e14-fad3f5264433",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 128,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": " number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n        self.n[timer] += 1\n\n# Fixed: weak_crypto - Use of insecure random number"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "b06fbb9a-83fb-4bb2-9da7-8b3121600bf0",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 129,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": " number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n        self.n[timer] += 1\n\n# Fixed: weak_crypto - Use of insecure random number generator\n        if random.random() < EPSILON:\n            ne"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "dbc38d13-61e4-4902-8a6c-5f6d24b6dd9e",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 130,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "new_timer = random.choice(TIMER_CANDIDATES)",
        "match_text": "random",
        "context": {
          "surrounding_code": " number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n        self.n[timer] += 1\n\n# Fixed: weak_crypto - Use of insecure random number generator\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "ca08ca80-8d6c-49b5-a171-058848d83250",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 133,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "eak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n        self.n[timer] += 1\n\n# Fixed: weak_crypto - Use of insecure random number generator\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure ran"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "3b785e1c-62ad-4dce-89ef-e9b02f9b64e7",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 134,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "if random.random() < EPSILON:",
        "match_text": "random",
        "context": {
          "surrounding_code": "eak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n        self.n[timer] += 1\n\n# Fixed: weak_crypto - Use of insecure random number generator\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_t"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "281927e5-2d65-447d-a5d3-36422e1c424b",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 134,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "if random.random() < EPSILON:",
        "match_text": "random",
        "context": {
          "surrounding_code": "eak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n        self.n[timer] += 1\n\n# Fixed: weak_crypto - Use of insecure random number generator\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_t"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "11291844-ad75-4227-a6ff-bda0c564bed9",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 135,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "new_timer = random.choice(TIMER_CANDIDATES)",
        "match_text": "random",
        "context": {
          "surrounding_code": "mber generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n        self.n[timer] += 1\n\n# Fixed: weak_crypto - Use of insecure random number generator\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_cry"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "8f33bf7b-9cc1-4c11-b980-255034acc97e",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 136,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "ER_CANDIDATES)\n        self.n[timer] += 1\n\n# Fixed: weak_crypto - Use of insecure random number generator\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_t"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "605b36cd-2369-4a12-991b-982df0331501",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 137,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": " - Use of insecure random number generator\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - U"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "7b41164d-8416-4c1c-bf74-b39520c24879",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 138,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "new_timer = random.choice(TIMER_CANDIDATES)",
        "match_text": "random",
        "context": {
          "surrounding_code": "ndom() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_cry"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "a4eeeca3-a3eb-49c4-bdb3-17fa9117f65c",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 139,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_cry"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "a53563eb-2245-48d2-baed-74942dd020b2",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 140,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "new_timer = random.choice(TIMER_CANDIDATES)",
        "match_text": "random",
        "context": {
          "surrounding_code": " number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: w"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "4f35e88a-9f56-4860-8e99-7ec22198402b",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 141,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": " random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n        if"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "9e882a11-584e-4869-be8c-a9289f5562d2",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 142,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n        if random.random() < EPSILON:\n            new_timer = random.choi"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "1cd5ad25-e48c-4361-b1f9-644523ff5899",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 143,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": " number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n            new_timer = random.choice(TIME"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "ba228f6e-18b1-4e7f-bb3e-69af35eb5bda",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 144,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "ANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n            new_timer = random.choice(TIMER_CANDIDATES)\n            new_timer = random.choice(TIMER_CANDI"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "ab158aa4-bfcf-48da-89a8-0cc5764d2980",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 145,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "if random.random() < EPSILON:",
        "match_text": "random",
        "context": {
          "surrounding_code": " generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n            new_timer = random.choice(TIMER_CANDIDATES)\n            new_timer = random.choice(TIMER_CANDIDATES)\n            self._since_update "
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "a97cb5fd-5598-41c8-8f77-bbc8167a9369",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 145,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "if random.random() < EPSILON:",
        "match_text": "random",
        "context": {
          "surrounding_code": " generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n            new_timer = random.choice(TIMER_CANDIDATES)\n            new_timer = random.choice(TIMER_CANDIDATES)\n            self._since_update "
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "9efe53da-1382-4aa9-9371-ebc991a93ccd",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 146,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "new_timer = random.choice(TIMER_CANDIDATES)",
        "match_text": "random",
        "context": {
          "surrounding_code": "of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n            new_timer = random.choice(TIMER_CANDIDATES)\n            new_timer = random.choice(TIMER_CANDIDATES)\n            self._since_update = 0\n            self._pick_new_timer()\n\n# Fixed: weak_cr"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "6130f185-4d49-4646-91bc-3675d0975b4e",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 147,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "new_timer = random.choice(TIMER_CANDIDATES)",
        "match_text": "random",
        "context": {
          "surrounding_code": " - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n            new_timer = random.choice(TIMER_CANDIDATES)\n            new_timer = random.choice(TIMER_CANDIDATES)\n            self._since_update = 0\n            self._pick_new_timer()\n\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: "
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "237ee664-3bca-473d-8f2a-0d7dfbf82e6d",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 148,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "new_timer = random.choice(TIMER_CANDIDATES)",
        "match_text": "random",
        "context": {
          "surrounding_code": "_crypto - Use of insecure random number generator\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n            new_timer = random.choice(TIMER_CANDIDATES)\n            new_timer = random.choice(TIMER_CANDIDATES)\n            self._since_update = 0\n            self._pick_new_timer()\n\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# "
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "528d84f5-d8f6-41e4-91b0-7588ea388e85",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 152,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "IMER_CANDIDATES)\n            new_timer = random.choice(TIMER_CANDIDATES)\n            new_timer = random.choice(TIMER_CANDIDATES)\n            self._since_update = 0\n            self._pick_new_timer()\n\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: w"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "69eecd0b-3024-4c45-8cb1-a3a830b5f5ba",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 153,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "NDIDATES)\n            new_timer = random.choice(TIMER_CANDIDATES)\n            self._since_update = 0\n            self._pick_new_timer()\n\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n          "
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "aa87aa50-35f8-43f3-a4ff-eb7748b702f3",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 154,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "S)\n            self._since_update = 0\n            self._pick_new_timer()\n\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_cry"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "eea30dfd-12f6-4a12-ae13-5c298a2b920f",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 155,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "w_timer()\n\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_t"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "350f7632-c7c0-41da-ac40-0861c3a4c30f",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 156,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": " generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - U"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "72d7a084-a7d5-42cb-af65-0b3a99cbdb78",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 157,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "new_timer = random.choice(TIMER_CANDIDATES)",
        "match_text": "random",
        "context": {
          "surrounding_code": " generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_cry"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "a2a14900-4869-489a-94d0-b873e0b907dd",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 158,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": " number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_cry"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "2d0a446b-2afd-4950-9e04-ed539e2aaa9f",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 159,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "new_timer = random.choice(TIMER_CANDIDATES)",
        "match_text": "random",
        "context": {
          "surrounding_code": " number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: w"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "f2b6e950-0f73-47e6-9ca4-c77e9ed05f1f",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 160,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": " random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: w"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "0ac52685-e6e8-4637-a8c1-d7aac60a5973",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 161,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n          "
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "7756c2a5-8895-43a8-9553-d1ae36db88ca",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 162,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": " number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n        else:\n   "
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "94c451cc-12ae-4cd6-be60-637ea117758b",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 163,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "ANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n        else:\n            new_timer = random.choice(TIMER_CANDIDATES)\n          "
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "751b038a-5ab5-4d82-b7b9-faea62ea88a2",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 164,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": " generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n        else:\n            new_timer = random.choice(TIMER_CANDIDATES)\n            new_timer = random.choice(TIMER_CANDIDATES)\n        self.n[ti"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "7c6fe577-fc8b-4793-9f29-a592dba70348",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 165,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "new_timer = random.choice(TIMER_CANDIDATES)",
        "match_text": "random",
        "context": {
          "surrounding_code": " generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n        else:\n            new_timer = random.choice(TIMER_CANDIDATES)\n            new_timer = random.choice(TIMER_CANDIDATES)\n        self.n[timer] += 1\n        alpha = 1 / self.n[timer]\n# Fixed: wea"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "a04080a2-e9ac-4dd2-82b7-544b316837b5",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 167,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "new_timer = random.choice(TIMER_CANDIDATES)",
        "match_text": "random",
        "context": {
          "surrounding_code": "tor\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n        else:\n            new_timer = random.choice(TIMER_CANDIDATES)\n            new_timer = random.choice(TIMER_CANDIDATES)\n        self.n[timer] += 1\n        alpha = 1 / self.n[timer]\n# Fixed: weak_crypto - Use of insecure random number generator\n        if random.r"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "ab04435b-0f54-4814-8546-c8376781ccc8",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 168,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "new_timer = random.choice(TIMER_CANDIDATES)",
        "match_text": "random",
        "context": {
          "surrounding_code": " generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n        else:\n            new_timer = random.choice(TIMER_CANDIDATES)\n            new_timer = random.choice(TIMER_CANDIDATES)\n        self.n[timer] += 1\n        alpha = 1 / self.n[timer]\n# Fixed: weak_crypto - Use of insecure random number generator\n        if random.random() < EPSILON:\n            new_timer = random.choice"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "0f2ff760-f1ae-4733-9617-dc841a423a2c",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 171,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "_CANDIDATES)\n        else:\n            new_timer = random.choice(TIMER_CANDIDATES)\n            new_timer = random.choice(TIMER_CANDIDATES)\n        self.n[timer] += 1\n        alpha = 1 / self.n[timer]\n# Fixed: weak_crypto - Use of insecure random number generator\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure ran"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "e9e8d59f-66bc-4179-8d1c-6f5f6d40f0fa",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 172,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "if random.random() < EPSILON:",
        "match_text": "random",
        "context": {
          "surrounding_code": "e(TIMER_CANDIDATES)\n            new_timer = random.choice(TIMER_CANDIDATES)\n        self.n[timer] += 1\n        alpha = 1 / self.n[timer]\n# Fixed: weak_crypto - Use of insecure random number generator\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_t"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "aeed0352-69e0-48b3-911c-2224f528cb11",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 172,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "if random.random() < EPSILON:",
        "match_text": "random",
        "context": {
          "surrounding_code": "e(TIMER_CANDIDATES)\n            new_timer = random.choice(TIMER_CANDIDATES)\n        self.n[timer] += 1\n        alpha = 1 / self.n[timer]\n# Fixed: weak_crypto - Use of insecure random number generator\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_t"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "c0ccf081-46f2-4943-9e07-b2ef43c590af",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 173,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "new_timer = random.choice(TIMER_CANDIDATES)",
        "match_text": "random",
        "context": {
          "surrounding_code": "mer = random.choice(TIMER_CANDIDATES)\n        self.n[timer] += 1\n        alpha = 1 / self.n[timer]\n# Fixed: weak_crypto - Use of insecure random number generator\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n        else:\n   "
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "00e58df8-77f5-4db5-91aa-22e3ade677b7",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 174,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "er] += 1\n        alpha = 1 / self.n[timer]\n# Fixed: weak_crypto - Use of insecure random number generator\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n        else:\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: w"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "9ac52858-abbd-4388-bade-2442e8f6225e",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 175,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": " - Use of insecure random number generator\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n        else:\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n        if"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "e879d671-fedc-4463-91c6-2eec783381e9",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 176,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "new_timer = random.choice(TIMER_CANDIDATES)",
        "match_text": "random",
        "context": {
          "surrounding_code": "ndom() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n        else:\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n        if random.random() < EPSILON:\n            new_timer = rand"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "602feac4-1fb1-418c-96c7-fa1a3e1eed70",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 178,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "new_timer = random.choice(TIMER_CANDIDATES)",
        "match_text": "random",
        "context": {
          "surrounding_code": "ES)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n        else:\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n            new_timer = random.choice(TIME"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "c7b72e99-c5c9-4108-ac15-8c69247437fc",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 179,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": " generator\n# Fixed: weak_crypto - Use of insecure random number generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n        else:\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n            new_timer = random.choice(TIMER_CANDIDATES)\n        if random.random() < EPSILON:\n           "
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "130f0969-4387-4564-a4ab-a658a24b7f32",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 180,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "if random.random() < EPSILON:",
        "match_text": "random",
        "context": {
          "surrounding_code": " generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n        else:\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n            new_timer = random.choice(TIMER_CANDIDATES)\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDI"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "e11ffe24-a8cb-4bae-ba92-878c077389b7",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 180,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "if random.random() < EPSILON:",
        "match_text": "random",
        "context": {
          "surrounding_code": " generator\n            new_timer = random.choice(TIMER_CANDIDATES)\n        else:\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n            new_timer = random.choice(TIMER_CANDIDATES)\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDI"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "844e4a5c-0522-4254-aca9-bf1cdcba8903",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 181,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "new_timer = random.choice(TIMER_CANDIDATES)",
        "match_text": "random",
        "context": {
          "surrounding_code": "dom.choice(TIMER_CANDIDATES)\n        else:\n            new_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n            new_timer = random.choice(TIMER_CANDIDATES)\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n        else:\n            # exploit \u2013 highest Q; "
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "71544947-3aff-4e8d-a820-b74c4a3d6a31",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 182,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "new_timer = random.choice(TIMER_CANDIDATES)",
        "match_text": "random",
        "context": {
          "surrounding_code": "ew_timer = random.choice(TIMER_CANDIDATES)\n# Fixed: weak_crypto - Use of insecure random number generator\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n            new_timer = random.choice(TIMER_CANDIDATES)\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n        else:\n            # exploit \u2013 highest Q; tie \u2192 smallest timer (faster)\n            best = max(sel"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "30511629-b08f-4926-a143-a5f3b8e4340d",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 183,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "if random.random() < EPSILON:",
        "match_text": "random",
        "context": {
          "surrounding_code": "_crypto - Use of insecure random number generator\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n            new_timer = random.choice(TIMER_CANDIDATES)\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n        else:\n            # exploit \u2013 highest Q; tie \u2192 smallest timer (faster)\n            best = max(self.q.values())\n            best_timers "
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "f69b28bb-90a6-452f-a1db-eae1fdd6a0d6",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 183,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "if random.random() < EPSILON:",
        "match_text": "random",
        "context": {
          "surrounding_code": "_crypto - Use of insecure random number generator\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n            new_timer = random.choice(TIMER_CANDIDATES)\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n        else:\n            # exploit \u2013 highest Q; tie \u2192 smallest timer (faster)\n            best = max(self.q.values())\n            best_timers "
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "9335ebf3-6c5e-44d1-98ee-0e2df87cfee5",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\optimizer.py",
        "line_number": 184,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "new_timer = random.choice(TIMER_CANDIDATES)",
        "match_text": "random",
        "context": {
          "surrounding_code": "r generator\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n            new_timer = random.choice(TIMER_CANDIDATES)\n        if random.random() < EPSILON:\n            new_timer = random.choice(TIMER_CANDIDATES)\n        else:\n            # exploit \u2013 highest Q; tie \u2192 smallest timer (faster)\n            best = max(self.q.values())\n            best_timers = [t for t, q in self.q.items() if q == best]\n          "
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      }
    ],
    "C:\\Users\\Yusuf\\Downloads\\FixWurx\\patch_bundle.py": [
      {
        "bug_id": "8854a8fe-6928-40dc-97a3-9cfba9d7f909",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\patch_bundle.py",
        "line_number": 70,
        "pattern_id": "ast_null_pointer",
        "bug_type": {},
        "description": "Potential null/None reference detected by AST analysis",
        "severity": "high",
        "confidence": 0.7,
        "remediation": "Add null/None check before accessing properties",
        "code_snippet": "    sha = hashlib.sha256(diff_text.encode(\"utf-8\")).hexdigest()",
        "match_text": "hexdigest",
        "context": {},
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "0f2e6a74-8b8c-4251-8ff2-3f5b2c6f2958",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\patch_bundle.py",
        "line_number": 120,
        "pattern_id": "ast_null_pointer",
        "bug_type": {},
        "description": "Potential null/None reference detected by AST analysis",
        "severity": "high",
        "confidence": 0.7,
        "remediation": "Add null/None check before accessing properties",
        "code_snippet": "    sha = hashlib.sha256(p_bytes).hexdigest()",
        "match_text": "hexdigest",
        "context": {},
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "806ecd2f-67bb-42ce-8e9a-28e42ebf7824",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\patch_bundle.py",
        "line_number": 146,
        "pattern_id": "ast_null_pointer",
        "bug_type": {},
        "description": "Potential null/None reference detected by AST analysis",
        "severity": "high",
        "confidence": 0.7,
        "remediation": "Add null/None check before accessing properties",
        "code_snippet": "    reg[sha] = datetime.now(tz=timezone.utc).isoformat(timespec=\"seconds\")",
        "match_text": "isoformat",
        "context": {},
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "ea57517e-6241-4ca8-a688-9f99d97f2c7c",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\patch_bundle.py",
        "line_number": 74,
        "pattern_id": "ast_null_pointer",
        "bug_type": {},
        "description": "Potential null/None reference detected by AST analysis",
        "severity": "high",
        "confidence": 0.7,
        "remediation": "Add null/None check before accessing properties",
        "code_snippet": "        \"created_at\": datetime.now(tz=timezone.utc).isoformat(timespec=\"seconds\"),",
        "match_text": "isoformat",
        "context": {},
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "70937508-6545-4f7d-abb2-934184e8beb5",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\patch_bundle.py",
        "line_number": 84,
        "pattern_id": "ast_null_pointer",
        "bug_type": {},
        "description": "Potential null/None reference detected by AST analysis",
        "severity": "high",
        "confidence": 0.7,
        "remediation": "Add null/None check before accessing properties",
        "code_snippet": "        data = json.dumps(manifest, indent=2).encode(\"utf-8\")",
        "match_text": "encode",
        "context": {},
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "12b8b0e0-9a68-4bca-8ffa-ce57f8298c07",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\patch_bundle.py",
        "line_number": 114,
        "pattern_id": "ast_null_pointer",
        "bug_type": {},
        "description": "Potential null/None reference detected by AST analysis",
        "severity": "high",
        "confidence": 0.7,
        "remediation": "Add null/None check before accessing properties",
        "code_snippet": "            m_bytes = tf.extractfile(\"manifest.json\").read()",
        "match_text": "read",
        "context": {},
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "417c95d2-5004-4223-8cac-609e940e100e",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\patch_bundle.py",
        "line_number": 115,
        "pattern_id": "ast_null_pointer",
        "bug_type": {},
        "description": "Potential null/None reference detected by AST analysis",
        "severity": "high",
        "confidence": 0.7,
        "remediation": "Add null/None check before accessing properties",
        "code_snippet": "            p_bytes = tf.extractfile(\"patch.diff\").read()",
        "match_text": "read",
        "context": {},
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "9b19381d-cfd8-418c-a96d-3718fced1748",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\patch_bundle.py",
        "line_number": 173,
        "pattern_id": "ast_null_pointer",
        "bug_type": {},
        "description": "Potential null/None reference detected by AST analysis",
        "severity": "high",
        "confidence": 0.7,
        "remediation": "Add null/None check before accessing properties",
        "code_snippet": "            patch_bytes = tf.extractfile(\"patch.diff\").read()",
        "match_text": "read",
        "context": {},
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "2b151b83-8f20-4b40-9fe5-ea134db3239a",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\patch_bundle.py",
        "line_number": 213,
        "pattern_id": "ast_null_pointer",
        "bug_type": {},
        "description": "Potential null/None reference detected by AST analysis",
        "severity": "high",
        "confidence": 0.7,
        "remediation": "Add null/None check before accessing properties",
        "code_snippet": "            diff = Path(ns.diff_file).read_text(encoding=\"utf-8\")",
        "match_text": "read_text",
        "context": {},
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      }
    ],
    "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py": [
      {
        "bug_id": "16617f62-9970-49d1-846a-350012b484ff",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 35,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "rd\": 1.0,                # optional\n      \"timestamp\": 1_723_456_789\n    }\n\nPublic API\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n    buf = ReplayBuffer(capacity=500)\n    buf.add(episode_dict)\n    batch = buf.sample(batch_size=32)\n\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nUnit tests"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "a30715f7-9d27-44b0-adb4-ef2522296a8d",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 36,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "6_789\n    }\n\nPublic API\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n    buf = ReplayBuffer(capacity=500)\n    buf.add(episode_dict)\n    batch = buf.sample(batch_size=32)\n\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nUnit tests can monkey-patch `random.sample` for determinism.\nUnit tests c"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "5a7c2491-c7e8-4aa1-bca5-dc9a4fc56103",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 37,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "ity=500)\n    buf.add(episode_dict)\n    batch = buf.sample(batch_size=32)\n\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nUnit tests can monkey-patch `random.sample` for determinism.\nUnit tests can monkey-patch `random.sample` for determinism.\n# Fixed: weak_"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "dfd677aa-06d5-43e7-9e33-80443f04d6ec",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 38,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "_size=32)\n\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nUnit tests can monkey-patch `random.sample` for determinism.\nUnit tests can monkey-patch `random.sample` for determinism.\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "b900f3ae-d4bc-47af-af62-44dbab2fbb5c",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 39,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "Unit tests can monkey-patch `random.sample` for determinism.",
        "match_text": "random",
        "context": {
          "surrounding_code": " generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nUnit tests can monkey-patch `random.sample` for determinism.\nUnit tests can monkey-patch `random.sample` for determinism.\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: wea"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "237640d6-e11b-4015-b390-5b17fcd64d80",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 40,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "Unit tests can monkey-patch `random.sample` for determinism.",
        "match_text": "random",
        "context": {
          "surrounding_code": "er generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nUnit tests can monkey-patch `random.sample` for determinism.\nUnit tests can monkey-patch `random.sample` for determinism.\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: w"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "61b1945d-3891-445d-9787-c401b516ee3e",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 41,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "mber generator\n# Fixed: weak_crypto - Use of insecure random number generator\nUnit tests can monkey-patch `random.sample` for determinism.\nUnit tests can monkey-patch `random.sample` for determinism.\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: w"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "7862a48e-ff22-4a26-94ae-860acd2b390b",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 42,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "mber generator\nUnit tests can monkey-patch `random.sample` for determinism.\nUnit tests can monkey-patch `random.sample` for determinism.\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport ran"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "d773eea2-a395-4352-9b6c-8d0ffffa60e1",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 43,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "determinism.\nUnit tests can monkey-patch `random.sample` for determinism.\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\n# Fixed: weak_crypto - Use of insecure random number genera"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "0940d02a-dddd-4c46-9f16-f0af1ad9dacd",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 44,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "terminism.\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport time\n\"\"\"\n# Fixed: weak_crypto - Use of"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "a0f77103-5240-494c-980d-e290eacf6470",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 45,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": " generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport time\n\"\"\"\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "66f88a3d-d2d9-4fda-be5a-718e09bb8df2",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 46,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "import random",
        "match_text": "random",
        "context": {
          "surrounding_code": " generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport time\n\"\"\"\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure rand"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "4fa7a03f-daf1-43a7-b1fc-873a45a86064",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 47,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "ixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport time\n\"\"\"\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\n# Fixed: weak_crypto - Use of"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "de53c4dc-8c4d-4a05-8114-d42e0c764726",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 48,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "import random",
        "match_text": "random",
        "context": {
          "surrounding_code": "ixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport time\n\"\"\"\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\n# Fixed: weak_crypto - Use of insecure rand"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "0a4ceea9-198d-4b01-a50e-3e0ca2da0558",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 51,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "ecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport time\n\"\"\"\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport time\nimport random\nimport time\nimport "
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "bdf7489d-0290-4ede-b960-0fd898491f56",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 52,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "ecure random number generator\nimport random\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport time\n\"\"\"\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport time\nimport random\nimport time\nimport random\nimport time\nimport time\nfrom collections import deque\nfr"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "ce4ded59-dd9b-4b7f-b037-07d613b42648",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 53,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "import random",
        "match_text": "random",
        "context": {
          "surrounding_code": "o - Use of insecure random number generator\nimport random\nimport time\n\"\"\"\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport time\nimport random\nimport time\nimport random\nimport time\nimport time\nfrom collections import deque\nfrom typing impo"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "ffbca183-1b28-4844-86ad-54b6102c4c5d",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 54,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "ecure random number generator\nimport random\nimport time\n\"\"\"\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport time\nimport random\nimport time\nimport random\nimport time\nimport time\nfrom collections import deque\nfrom typing import Deque, Dict, List\n\n__all__ = [\"ReplayBuffer\"]\n\n\nclass Replay"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "6b962b11-9834-48c8-85a7-51e06227f267",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 55,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "import random",
        "match_text": "random",
        "context": {
          "surrounding_code": "ixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport time\nimport random\nimport time\nimport random\nimport time\nimport time\nfrom collections import deque\nfrom typing import Deque, Dict, List\n\n__all__ = [\"ReplayBuffer\"]\n\n\nclass ReplayBuffer:\n    \"\""
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "ddfe4b19-3afe-4996-ba95-359268c0dd46",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 57,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "import random",
        "match_text": "random",
        "context": {
          "surrounding_code": " insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport time\nimport random\nimport time\nimport random\nimport time\nimport time\nfrom collections import deque\nfrom typing import Deque, Dict, List\n\n__all__ = [\"ReplayBuffer\"]\n\n\nclass ReplayBuffer:\n    \"\"\"\n    Cyclic deque with O("
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "5b7adebf-566b-46c2-acdd-066b297dcc56",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 59,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "import random",
        "match_text": "random",
        "context": {
          "surrounding_code": "nerator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport time\nimport random\nimport time\nimport random\nimport time\nimport time\nfrom collections import deque\nfrom typing import Deque, Dict, List\n\n__all__ = [\"ReplayBuffer\"]\n\n\nclass ReplayBuffer:\n    \"\"\"\n    Cyclic deque with O(1) append; uniform random "
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "ba8ac011-54b6-4bc4-93ca-1fdd179e2589",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 70,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "Cyclic deque with O(1) append; uniform random sampling without replacement.",
        "match_text": "random",
        "context": {
          "surrounding_code": "mport time\nimport random\nimport time\nimport random\nimport time\nimport time\nfrom collections import deque\nfrom typing import Deque, Dict, List\n\n__all__ = [\"ReplayBuffer\"]\n\n\nclass ReplayBuffer:\n    \"\"\"\n    Cyclic deque with O(1) append; uniform random sampling without replacement.\n    \"\"\"\n\n    def __init__(self, capacity: int = 1000) -> None:\n        if capacity <= 0:\n            raise ValueError(\"capacity must be positive\")\n        self._buf: Deque[Dict] = deque(maxlen=capaci"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "45d4fea8-28d9-461f-96a8-92f31b39e837",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 84,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "--------------------------------------------------------- add\n    def add(self, episode: Dict) -> None:\n        \"\"\"\n        Append a new episode dictionary; adds a 'timestamp' if missing.\n        \"\"\"\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n        return random.sample(list(self._buf), k)\n        self._buf.append"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "38f62632-44f5-46e7-9163-be63f203c85f",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 85,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "   def add(self, episode: Dict) -> None:\n        \"\"\"\n        Append a new episode dictionary; adds a 'timestamp' if missing.\n        \"\"\"\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n        return random.sample(list(self._buf), k)\n        self._buf.append(episode)\n# Fixed: weak_crypto - Use of insecure random number "
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "a43bffd6-d546-4649-8b8e-4f66e929b21b",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 86,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "pend a new episode dictionary; adds a 'timestamp' if missing.\n        \"\"\"\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n        return random.sample(list(self._buf), k)\n        self._buf.append(episode)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number "
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "045de150-9dfa-4083-8b69-fa08d692aefa",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 87,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "return random.sample(list(self._buf), k)",
        "match_text": "random",
        "context": {
          "surrounding_code": "       \"\"\"\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n        return random.sample(list(self._buf), k)\n        self._buf.append(episode)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure "
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "b3e83a5c-1669-43e9-80a7-da86037a0fcc",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 89,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n        return random.sample(list(self._buf), k)\n        self._buf.append(episode)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: w"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "2ccad1d1-31a1-4929-8fed-addca9c10152",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 90,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "weak_crypto - Use of insecure random number generator\n        return random.sample(list(self._buf), k)\n        self._buf.append(episode)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: w"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "cd958075-6094-40f1-a368-d2bf7a0956d7",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 91,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "eturn random.sample(list(self._buf), k)\n        self._buf.append(episode)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n        re"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "6312dcf3-d474-45a8-823f-eb71a561e0bd",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 92,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "d(episode)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n        return random.sample(list(self._buf), k)\n    def sample(self, bat"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "39801a1e-e383-49df-8f5a-afa62168f02f",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 93,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": " generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n        return random.sample(list(self._buf), k)\n    def sample(self, batch_size: int) -> List[Dict]:\n        \"\"\"\n# Fixed: weak_crypto -"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "3e2c69a4-1794-4666-8d9f-e29565ca6a9c",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 94,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": " generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n        return random.sample(list(self._buf), k)\n    def sample(self, batch_size: int) -> List[Dict]:\n        \"\"\"\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto -"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "ad623ccf-f522-45e8-b5bc-79cd58534610",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 95,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "return random.sample(list(self._buf), k)",
        "match_text": "random",
        "context": {
          "surrounding_code": " generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n        return random.sample(list(self._buf), k)\n    def sample(self, batch_size: int) -> List[Dict]:\n        \"\"\"\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed:"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "5a84cb06-c376-4353-a2d5-2d264e09567f",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 98,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "andom number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n        return random.sample(list(self._buf), k)\n    def sample(self, batch_size: int) -> List[Dict]:\n        \"\"\"\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: w"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "065b75a9-e6a6-43fe-84e1-fe7612c5bb18",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 99,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "andom number generator\n        return random.sample(list(self._buf), k)\n    def sample(self, batch_size: int) -> List[Dict]:\n        \"\"\"\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n        re"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "e2e2161a-8c00-4e0c-b93e-4edd8674cd85",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 100,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "buf), k)\n    def sample(self, batch_size: int) -> List[Dict]:\n        \"\"\"\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n        return random.sample(list(self._buf), k)\n        \"\"\"\n        n = "
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "62832418-487d-42b1-8d36-db29587db58c",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 101,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "       \"\"\"\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n        return random.sample(list(self._buf), k)\n        \"\"\"\n        n = len(self._buf)\n# Fixed: weak_crypto - Use of insecure random nu"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "35f74a57-3a32-4633-9420-181596b54e21",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 102,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": " generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n        return random.sample(list(self._buf), k)\n        \"\"\"\n        n = len(self._buf)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random nu"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "daa1d2b0-7e9d-49f2-8c9a-1d59e632674e",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 103,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "return random.sample(list(self._buf), k)",
        "match_text": "random",
        "context": {
          "surrounding_code": " generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n        return random.sample(list(self._buf), k)\n        \"\"\"\n        n = len(self._buf)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n        return random.sample(list("
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "bcb2e705-bf44-49df-ba63-22be3763bef1",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 106,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n        return random.sample(list(self._buf), k)\n        \"\"\"\n        n = len(self._buf)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n        return random.sample(list(self._buf), k)\n# Fixed: weak_crypto - Use of insecure random number generator\n        return random.sa"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "fc71accb-c8da-4ec1-b878-b7115684fa12",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 107,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "crypto - Use of insecure random number generator\n        return random.sample(list(self._buf), k)\n        \"\"\"\n        n = len(self._buf)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n        return random.sample(list(self._buf), k)\n# Fixed: weak_crypto - Use of insecure random number generator\n        return random.sample(list(self._buf), k)\n        return random.sample(list(self"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "cebd7004-aa37-4bb3-8db1-65a1b633a1be",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 108,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "return random.sample(list(self._buf), k)",
        "match_text": "random",
        "context": {
          "surrounding_code": " random.sample(list(self._buf), k)\n        \"\"\"\n        n = len(self._buf)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n        return random.sample(list(self._buf), k)\n# Fixed: weak_crypto - Use of insecure random number generator\n        return random.sample(list(self._buf), k)\n        return random.sample(list(self._buf), k)\n\n    # -------------------------------"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "ea065e77-0395-4e39-968c-8fc92cd1fcbc",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 109,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "      n = len(self._buf)\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n        return random.sample(list(self._buf), k)\n# Fixed: weak_crypto - Use of insecure random number generator\n        return random.sample(list(self._buf), k)\n        return random.sample(list(self._buf), k)\n\n    # -------------------------------------------------------------- utilities\n    def __len__(self)"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "f93cfab0-7937-44f8-95ae-0731d972601f",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 110,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "return random.sample(list(self._buf), k)",
        "match_text": "random",
        "context": {
          "surrounding_code": " random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n        return random.sample(list(self._buf), k)\n# Fixed: weak_crypto - Use of insecure random number generator\n        return random.sample(list(self._buf), k)\n        return random.sample(list(self._buf), k)\n\n    # -------------------------------------------------------------- utilities\n    def __len__(self) -> int:  # noqa: Dunder\n        return len(self."
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "b596e65e-8db6-44c7-a288-fba8367aea6e",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\replay_buffer.py",
        "line_number": 111,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "return random.sample(list(self._buf), k)",
        "match_text": "random",
        "context": {
          "surrounding_code": "se of insecure random number generator\n        return random.sample(list(self._buf), k)\n# Fixed: weak_crypto - Use of insecure random number generator\n        return random.sample(list(self._buf), k)\n        return random.sample(list(self._buf), k)\n\n    # -------------------------------------------------------------- utilities\n    def __len__(self) -> int:  # noqa: Dunder\n        return len(self._buf)\n\n    def is_full(self) -> bool:\n        \"\"\""
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      }
    ],
    "C:\\Users\\Yusuf\\Downloads\\FixWurx\\scheduler.py": [
      {
        "bug_id": "f17f3628-0465-4f73-9c94-a1ed40c27f75",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\scheduler.py",
        "line_number": 19,
        "pattern_id": "command_injection",
        "bug_type": {},
        "description": "Potential command injection vulnerability",
        "severity": "critical",
        "confidence": 0.5,
        "remediation": "Use parameterized APIs and avoid string concatenation with user input",
        "code_snippet": "* `TriangulationEngine.execute_tick()`        \u2013 performs one deterministic",
        "match_text": "execute_tick()`",
        "context": {
          "surrounding_code": "rameworks.\n\nAssumed external contracts\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n* `AgentCoordinator.coordinate_tick(engine)`  \u2013 drives Observer \u2192 Analyst \u2192\n  Verifier sequence once; returns after \u2264 1 s wall-clock.\n* `TriangulationEngine.execute_tick()`        \u2013 performs one deterministic\n  state-machine tick.\n* Both raise exceptions only when invariants break; scheduler will convert\n  them into `PanicFail` so the outer system can crash loudly.\n\nOnly standard-library imports used.\n\"\"\""
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "861059a3-c8a2-4076-8c7f-03f947e337cb",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\scheduler.py",
        "line_number": 133,
        "pattern_id": "exception_swallowing",
        "bug_type": {},
        "description": "Exception caught but not handled properly",
        "severity": "medium",
        "confidence": 0.216,
        "remediation": "Log the exception at minimum, and consider proper error handling",
        "code_snippet": "except CapacityError:",
        "match_text": "except CapacityError:\n                break",
        "context": {
          "surrounding_code": "elf.MAX_PARALLEL\n            and backlog_list\n            and self._rm.can_allocate()\n        ):\n            ticket = backlog_list.pop(0)\n            try:\n                self._rm.allocate(ticket.id)\n            except CapacityError:\n                break  # safety net\u2014should not happen\n\n            # Create initial WAIT bug & engine\n            bug0 = Bug(\n                id=ticket.id,\n                phase=Phase.WAIT,\n         "
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 0.6,
            "false_positive_probability": 0.0,
            "notes": [
              "Exception may be logged"
            ]
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 0.6,
            "false_positive_probability": 0.0,
            "notes": [
              "AST analysis found None check",
              "AST analysis found None check",
              "AST analysis found None check"
            ]
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "6bffce9d-99cb-48bd-bd37-5f944c21bebf",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\scheduler.py",
        "line_number": 151,
        "pattern_id": "exception_swallowing",
        "bug_type": {},
        "description": "Exception caught but not handled properly",
        "severity": "medium",
        "confidence": 0.216,
        "remediation": "Log the exception at minimum, and consider proper error handling",
        "code_snippet": "except ValueError:",
        "match_text": "except ValueError:\n                pass",
        "context": {
          "surrounding_code": "Coordinator()\n            self._live[ticket.id] = LiveContext(engine=engine, coordinator=coord)\n\n            # remove from original deque\n            try:\n                self._backlog.remove(ticket)\n            except ValueError:\n                pass  # already removed somewhere else\n\n            # give other coroutines breathing room\n            await asyncio.sleep(0)\n\n    # --------------------------------------------------"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 0.6,
            "false_positive_probability": 0.0,
            "notes": [
              "Exception may be logged"
            ]
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 0.6,
            "false_positive_probability": 0.0,
            "notes": [
              "AST analysis found None check",
              "AST analysis found None check",
              "AST analysis found None check"
            ]
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      }
    ],
    "C:\\Users\\Yusuf\\Downloads\\FixWurx\\scope_filter.py": [
      {
        "bug_id": "12079be6-0b04-47ff-814e-3113888c200d",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\scope_filter.py",
        "line_number": 87,
        "pattern_id": "ast_null_pointer",
        "bug_type": {},
        "description": "Potential null/None reference detected by AST analysis",
        "severity": "high",
        "confidence": 0.7,
        "remediation": "Add null/None check before accessing properties",
        "code_snippet": "        root = Path(repo_root).resolve()",
        "match_text": "resolve",
        "context": {},
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "0dd064e3-3812-418a-bc42-75875c8debb1",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\scope_filter.py",
        "line_number": 101,
        "pattern_id": "ast_null_pointer",
        "bug_type": {},
        "description": "Potential null/None reference detected by AST analysis",
        "severity": "high",
        "confidence": 0.7,
        "remediation": "Add null/None check before accessing properties",
        "code_snippet": "            if fnmatch.fnmatch(p.relative_to(root).as_posix(), pat)",
        "match_text": "as_posix",
        "context": {},
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "42389657-0e3e-4ddb-a83b-e27121312afc",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\scope_filter.py",
        "line_number": 110,
        "pattern_id": "ast_null_pointer",
        "bug_type": {},
        "description": "Potential null/None reference detected by AST analysis",
        "severity": "high",
        "confidence": 0.7,
        "remediation": "Add null/None check before accessing properties",
        "code_snippet": "                fnmatch.fnmatch(p.relative_to(root).as_posix(), pat)",
        "match_text": "as_posix",
        "context": {},
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      }
    ],
    "C:\\Users\\Yusuf\\Downloads\\FixWurx\\Specialized_agents.py": [
      {
        "bug_id": "1b27b7c6-e5f9-432f-9e7c-ce99f767f650",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\Specialized_agents.py",
        "line_number": 162,
        "pattern_id": "ast_null_pointer",
        "bug_type": {},
        "description": "Potential null/None reference detected by AST analysis",
        "severity": "high",
        "confidence": 0.7,
        "remediation": "Add null/None check before accessing properties",
        "code_snippet": "        super().__init__(\"Observer\", _OBSERVER_PROMPT)",
        "match_text": "__init__",
        "context": {},
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "9c6dda27-0232-42fe-9994-6c386f445d39",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\Specialized_agents.py",
        "line_number": 167,
        "pattern_id": "ast_null_pointer",
        "bug_type": {},
        "description": "Potential null/None reference detected by AST analysis",
        "severity": "high",
        "confidence": 0.7,
        "remediation": "Add null/None check before accessing properties",
        "code_snippet": "        super().__init__(\"Analyst\", _ANALYST_PROMPT)",
        "match_text": "__init__",
        "context": {},
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "1c1629f3-e4d3-452e-8058-a508c715df34",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\Specialized_agents.py",
        "line_number": 172,
        "pattern_id": "ast_null_pointer",
        "bug_type": {},
        "description": "Potential null/None reference detected by AST analysis",
        "severity": "high",
        "confidence": 0.7,
        "remediation": "Add null/None check before accessing properties",
        "code_snippet": "        super().__init__(\"Verifier\", _VERIFIER_PROMPT)",
        "match_text": "__init__",
        "context": {},
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "2b220a6e-34c6-4a32-ac2a-f40e29a388a6",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\Specialized_agents.py",
        "line_number": 82,
        "pattern_id": "ast_null_pointer",
        "bug_type": {},
        "description": "Potential null/None reference detected by AST analysis",
        "severity": "high",
        "confidence": 0.7,
        "remediation": "Add null/None check before accessing properties",
        "code_snippet": "        super().__init__(",
        "match_text": "__init__",
        "context": {},
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "e5499480-5131-4d46-b7ff-357a55244700",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\Specialized_agents.py",
        "line_number": 84,
        "pattern_id": "ast_null_pointer",
        "bug_type": {},
        "description": "Potential null/None reference detected by AST analysis",
        "severity": "high",
        "confidence": 0.7,
        "remediation": "Add null/None check before accessing properties",
        "code_snippet": "            system_message=textwrap.dedent(system_prompt).strip(),",
        "match_text": "strip",
        "context": {},
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "d7d10e08-8442-4233-bcfe-7bb9de10a5d3",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\Specialized_agents.py",
        "line_number": 34,
        "pattern_id": "exception_swallowing",
        "bug_type": {},
        "description": "Exception caught but not handled properly",
        "severity": "medium",
        "confidence": 0.6,
        "remediation": "Log the exception at minimum, and consider proper error handling",
        "code_snippet": "except ModuleNotFoundError:  # pragma: no cover",
        "match_text": "except ModuleNotFoundError:  #",
        "context": {
          "surrounding_code": "xed: null_reference - Exception caught but not handled properly\n# Fixed: null_reference - Exception caught but not handled properly\n# Fixed: null_reference - Exception caught but not handled properly\nexcept ModuleNotFoundError:  # pragma: no cover\n    class _DummyAssistant:  # noqa: D401  (simple stub)\n        def __init__(self, *_, **__):  # noqa: D401\n            self.name = \"dummy\"\n\n        async def astream_chat(self, *_, **__):  # noqa: D"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "08b77659-695d-41c8-8170-1695bd435c58",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\Specialized_agents.py",
        "line_number": 107,
        "pattern_id": "exception_swallowing",
        "bug_type": {},
        "description": "Exception caught but not handled properly",
        "severity": "medium",
        "confidence": 0.6,
        "remediation": "Log the exception at minimum, and consider proper error handling",
        "code_snippet": "except AttributeError:",
        "match_text": "except AttributeError:\n            pass",
        "context": {
          "surrounding_code": "ntent_chunks)\n\n    # upstream may want to wipe internal memory between bugs\n    def reset_memory(self) -> None:\n        \"\"\"Clear AutoGen conversation history.\"\"\"\n        try:\n            self.reset()\n        except AttributeError:\n            pass  # stub\n\n\n# ------------------------------------------------------------------------------\n# 3\u2004 Role-specific agents\n# ---------------------------------------------------------------"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      }
    ],
    "C:\\Users\\Yusuf\\Downloads\\FixWurx\\terminal_interface.py": [
      {
        "bug_id": "2b63a42a-4857-4e8e-9f71-1a0257358b81",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\terminal_interface.py",
        "line_number": 80,
        "pattern_id": "ast_null_pointer",
        "bug_type": {},
        "description": "Potential null/None reference detected by AST analysis",
        "severity": "high",
        "confidence": 0.7,
        "remediation": "Add null/None check before accessing properties",
        "code_snippet": "    Path(cwd).mkdir(exist_ok=True)",
        "match_text": "mkdir",
        "context": {},
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "931df161-58c7-45bd-a87f-9cb186aecb4e",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\terminal_interface.py",
        "line_number": 124,
        "pattern_id": "exception_swallowing",
        "bug_type": {},
        "description": "Exception caught but not handled properly",
        "severity": "medium",
        "confidence": 0.6,
        "remediation": "Log the exception at minimum, and consider proper error handling",
        "code_snippet": "except FileNotFoundError:",
        "match_text": "except FileNotFoundError:\n        return",
        "context": {
          "surrounding_code": "=-1,\n            stdout=\"\",\n            stderr=f\"Command timed out after {timeout} seconds.\",\n            timed_out=True,\n        )\n# Fixed: null_reference - Exception caught but not handled properly\n    except FileNotFoundError:\n        return CommandResult(\n            ok=False,\n            exit_code=-1,\n            stdout=\"\",\n            stderr=f\"Command not found: {cmd_list[0]}\",\n        )\n    except Exception as e:\n     "
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      }
    ],
    "C:\\Users\\Yusuf\\Downloads\\FixWurx\\test_runner.py": [
      {
        "bug_id": "1ca0726b-1459-41d7-b76f-0ad82c5693cc",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\test_runner.py",
        "line_number": 131,
        "pattern_id": "ast_null_pointer",
        "bug_type": {},
        "description": "Potential null/None reference detected by AST analysis",
        "severity": "high",
        "confidence": 0.7,
        "remediation": "Add null/None check before accessing properties",
        "code_snippet": "        compressed_log, _ = Compressor(_MAX_TOKENS).compress(log)",
        "match_text": "compress",
        "context": {},
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "e33a01fc-436f-4b04-a26f-365dc44340f4",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\test_runner.py",
        "line_number": 92,
        "pattern_id": "ast_null_pointer",
        "bug_type": {},
        "description": "Potential null/None reference detected by AST analysis",
        "severity": "high",
        "confidence": 0.7,
        "remediation": "Add null/None check before accessing properties",
        "code_snippet": "            tokens = line.replace(\"=\", \"\").replace(\",\", \"\").split()",
        "match_text": "split",
        "context": {},
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "7916854d-50d7-4779-b04e-c85bb00319a0",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\test_runner.py",
        "line_number": 92,
        "pattern_id": "ast_null_pointer",
        "bug_type": {},
        "description": "Potential null/None reference detected by AST analysis",
        "severity": "high",
        "confidence": 0.7,
        "remediation": "Add null/None check before accessing properties",
        "code_snippet": "            tokens = line.replace(\"=\", \"\").replace(\",\", \"\").split()",
        "match_text": "replace",
        "context": {},
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "f36148ec-28f8-4583-af2e-0c72f470ef97",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\test_runner.py",
        "line_number": 31,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "tput \u2264 4096 tokens using\n   `tooling.compress.Compressor` (so Verifier can ingest it).\n\nNo external dependencies beyond `pytest` itself.\n\"\"\"\n\nfrom __future__ import annotations\n\nimport json\nimport os\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport ran"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "8baf21f0-384e-4553-a20c-4be4118398f1",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\test_runner.py",
        "line_number": 32,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "erifier can ingest it).\n\nNo external dependencies beyond `pytest` itself.\n\"\"\"\n\nfrom __future__ import annotations\n\nimport json\nimport os\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\n# Fixed: weak_crypto - Use of insecure random number genera"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "4350f030-52e9-44d3-90d3-399cf2dc5447",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\test_runner.py",
        "line_number": 33,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "t` itself.\n\"\"\"\n\nfrom __future__ import annotations\n\nimport json\nimport os\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport subprocess\nimport random\nimport subpro"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "e7e3f7f6-df65-4b4a-87f8-ce47f27f7c58",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\test_runner.py",
        "line_number": 34,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "\nimport os\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport subprocess\nimport random\nimport subprocess\nimport random\nimport subprocess\nimport subprocess\nimport s"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "6bb000b7-0a79-4171-8f1f-610a51539a37",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\test_runner.py",
        "line_number": 35,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "import random",
        "match_text": "random",
        "context": {
          "surrounding_code": " generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport subprocess\nimport random\nimport subprocess\nimport random\nimport subprocess\nimport subprocess\nimport sys\nimport time"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "e95aa4de-b7b4-403d-9aec-2eb83316153d",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\test_runner.py",
        "line_number": 36,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "ixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport subprocess\nimport random\nimport subprocess\nimport random\nimport subprocess\nimport subprocess\nimport sys\nimport time\nfrom pathlib import Path\nfrom typing import Final, Tuple\n\nfrom"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "4dc90b3d-1e4a-4200-b0f3-349f3bdf0f20",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\test_runner.py",
        "line_number": 37,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "import random",
        "match_text": "random",
        "context": {
          "surrounding_code": "ixed: weak_crypto - Use of insecure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport subprocess\nimport random\nimport subprocess\nimport random\nimport subprocess\nimport subprocess\nimport sys\nimport time\nfrom pathlib import Path\nfrom typing import Final, Tuple\n\nfrom tooling.compr"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "e7d3bc05-7ace-431d-a31f-e9b478bc71d6",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\test_runner.py",
        "line_number": 39,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "import random",
        "match_text": "random",
        "context": {
          "surrounding_code": "ure random number generator\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport subprocess\nimport random\nimport subprocess\nimport random\nimport subprocess\nimport subprocess\nimport sys\nimport time\nfrom pathlib import Path\nfrom typing import Final, Tuple\n\nfrom tooling.compress import Compressor\n\n_RANDOM_S"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "2180c834-0455-4966-9cd2-b51f6528958a",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\test_runner.py",
        "line_number": 41,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "import random",
        "match_text": "random",
        "context": {
          "surrounding_code": "xed: weak_crypto - Use of insecure random number generator\nimport random\n# Fixed: weak_crypto - Use of insecure random number generator\nimport random\nimport subprocess\nimport random\nimport subprocess\nimport random\nimport subprocess\nimport subprocess\nimport sys\nimport time\nfrom pathlib import Path\nfrom typing import Final, Tuple\n\nfrom tooling.compress import Compressor\n\n_RANDOM_SEED: Final[int] = 42\n_MAX_TOKENS"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "37190a0e-73d8-40cf-8302-4c1eb7be03b7",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\test_runner.py",
        "line_number": 62,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "# Fixed: weak_crypto - Use of insecure random number generator",
        "match_text": "random",
        "context": {
          "surrounding_code": "\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\ndef _run_pytest(path: Path, extra_args: Tuple[str, ...]) -> subprocess.CompletedProcess:\n    \"\"\"\n    Launch pytest as a subprocess with deterministic env.\n    \"\"\"\n# Fixed: weak_crypto - Use of insecure random number generator\n    random.seed(_RANDOM_SEED)\n    random.seed(_RANDOM_SEED)\n\n    cmd = [\n        sys.executable,\n        \"-m\",\n        \"pytest\",\n        str(path),\n        \"-q\",                 # quiet\n        \"--ma"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "1bd36846-c5ac-4cdd-9efd-4cf4f145f92c",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\test_runner.py",
        "line_number": 63,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "random.seed(_RANDOM_SEED)",
        "match_text": "random",
        "context": {
          "surrounding_code": ", extra_args: Tuple[str, ...]) -> subprocess.CompletedProcess:\n    \"\"\"\n    Launch pytest as a subprocess with deterministic env.\n    \"\"\"\n# Fixed: weak_crypto - Use of insecure random number generator\n    random.seed(_RANDOM_SEED)\n    random.seed(_RANDOM_SEED)\n\n    cmd = [\n        sys.executable,\n        \"-m\",\n        \"pytest\",\n        str(path),\n        \"-q\",                 # quiet\n        \"--maxfail=50\",       # short-circu"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "014a9801-babf-4c83-9205-90642c95d386",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\test_runner.py",
        "line_number": 64,
        "pattern_id": "insecure_random",
        "bug_type": {},
        "description": "Use of insecure random number generator",
        "severity": "medium",
        "confidence": 0.5,
        "remediation": "Use cryptographically secure random generators",
        "code_snippet": "random.seed(_RANDOM_SEED)",
        "match_text": "random",
        "context": {
          "surrounding_code": " -> subprocess.CompletedProcess:\n    \"\"\"\n    Launch pytest as a subprocess with deterministic env.\n    \"\"\"\n# Fixed: weak_crypto - Use of insecure random number generator\n    random.seed(_RANDOM_SEED)\n    random.seed(_RANDOM_SEED)\n\n    cmd = [\n        sys.executable,\n        \"-m\",\n        \"pytest\",\n        str(path),\n        \"-q\",                 # quiet\n        \"--maxfail=50\",       # short-circuit runaway suites\n        *ext"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      }
    ],
    "C:\\Users\\Yusuf\\Downloads\\FixWurx\\triangulation_engine.py": [
      {
        "bug_id": "d7ac12b2-7fd8-447f-8462-839d25a850b2",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\triangulation_engine.py",
        "line_number": 73,
        "pattern_id": "command_injection",
        "bug_type": {},
        "description": "Potential command injection vulnerability",
        "severity": "critical",
        "confidence": 0.5,
        "remediation": "Use parameterized APIs and avoid string concatenation with user input",
        "code_snippet": "`core.parallel_executor.ParallelExecutor`, which instantiates multiple",
        "match_text": "executor.ParallelExecutor`",
        "context": {
          "surrounding_code": "xed: code_injection - Potential command injection vulnerability\n# Fixed: code_injection - Potential command injection vulnerability\n# Fixed: code_injection - Potential command injection vulnerability\n    `core.parallel_executor.ParallelExecutor`, which instantiates multiple\n    engines.\n\n    The engine itself is oblivious to AutoGen, canary, etc.\u2014it only cares about\n    deterministic phase transitions & invariants.  Higher layers orchestrate\n    agents and patch bundles"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      },
      {
        "bug_id": "cc98e2da-be10-49f0-9d88-797a1e82bce8",
        "file_path": "C:\\Users\\Yusuf\\Downloads\\FixWurx\\triangulation_engine.py",
        "line_number": 51,
        "pattern_id": "exception_swallowing",
        "bug_type": {},
        "description": "Exception caught but not handled properly",
        "severity": "medium",
        "confidence": 0.36,
        "remediation": "Log the exception at minimum, and consider proper error handling",
        "code_snippet": "except Exception:  # noqa: BLE001",
        "match_text": "except Exception:  #",
        "context": {
          "surrounding_code": "xed: null_reference - Exception caught but not handled properly\n# Fixed: null_reference - Exception caught but not handled properly\n# Fixed: null_reference - Exception caught but not handled properly\n            except Exception:  # noqa: BLE001\n                # metrics must never crash the engine\n                pass\n\n\n# \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n# 2.  Fatal runtime error\n# \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500"
        },
        "related_files": [],
        "false_positive_probability": 0.0,
        "verification_results": {
          "static_analysis": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "pattern_refinement": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "context_validation": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          },
          "ast_validation": {
            "is_valid": true,
            "confidence_factor": 0.6,
            "false_positive_probability": 0.0,
            "notes": [
              "AST analysis found None check"
            ]
          },
          "similarity_check": {
            "is_valid": true,
            "confidence_factor": 1.0,
            "false_positive_probability": 0.0,
            "notes": []
          }
        }
      }
    ]
  },
  "total_bugs": 202,
  "files_analyzed": 30,
  "files_with_bugs": 16,
  "files_with_errors": 0,
  "skipped_files": 0,
  "workflow_id": null
}